#!/bin/bash

temp_dir=$(mktemp -d)
build_dir=${temp_dir}/build
fakeroot_dir=${temp_dir}/fakeroot
dir=$PWD

#create directories
mkdir -pv ${build_dir} ${fakeroot_dir}

#set some needed environment variables, if not already
if [[ ! -z ${LFS+x} ]]; then
    LFS=/mnt/lfs
fi
if [[ ! -z ${LFS_TGT+x} ]]; then
    LFS_TGT=$(uname -m)-lfs-linux-gnu
fi

pkg_package() {
    #create metadata
    cd ${fakeroot_dir}
    find . -type l > ${fakeroot_dir}/LINKS
    find . -type f > ${fakeroot_dir}/FILES
    find . -type d > ${fakeroot_dir}/DIRS
    find . -type f -exec md5sum {} \; | grep -ve "\\./md5sums$" > ${fakeroot_dir}/md5sums
    #remove "." from the beginning of pathnames
    sed -i -e "s/^\\.//" ${fakeroot_dir}/FILES
    sed -i -e "s/^\\.//" ${fakeroot_dir}/DIRS
    sed -i -e "s/^\\.//" ${fakeroot_dir}/LINKS

    #create package
    cd $dir
    cp ${temp_dir}/PKGBUILD ${fakeroot_dir}/
    if [[ ! -z ${pkgver_postfix} ]]; then
        fakeroot tar -cJf ${pkgname}-${pkgver}-${pkgver_postfix}.pkg -C ${fakeroot_dir} .
    else
        fakeroot tar -cJf ${pkgname}-${pkgver}.pkg -C ${fakeroot_dir} .
    fi

    #clean build directories
    rm -rf ${build_dir}/* ${fakeroot_dir}/*
}

case $1 in
    "build")
        if [[ ! -z ${2+x} ]]; then
            cp $2 ${temp_dir}/PKGBUILD
	else
	    cp ./PKGBUILD ${temp_dir}/
        fi
        source ${temp_dir}/PKGBUILD
	echo Preparing source ...
        pkg_prepare
	echo Building ...
        pkg_build
	echo Running checks ...
        pkg_check
	echo Installing to fakeroot ...
        pkg_install
	echo Packaging ...
        pkg_package
        ;;
    "install")
        #Name and path of package file for use in postinstall script
        package_file=$dir/$2

        #extract files
        tar -xJf $2 -C ${fakeroot_dir} --exclude ./PKGBUILD --exclude ./md5sums --exclude ./FILES --exclude ./DIRS --exclude ./LINKS
        tar -xJf $2 -C ${temp_dir} ./PKGBUILD

        #install files with rsync
        rsync -aK ${fakeroot_dir}/ /

        cd ${temp_dir}
        source ./PKGBUILD
	echo Running postinstall ...
        pkg_postinstall
        ;;
    "remove")
        tar -xJf $2 -C ${temp_dir} ./FILES ./DIRS ./LINKS ./PKGBUILD
	cd ${temp_dir}
        rm -f $( cat FILES )
	rm -f $( cat LINKS )
        rmdir -p --ignore-fail-on-non-empty $( cat DIRS )
        source ./PKGBUILD
	echo Running postremove ...
        pkg_remove
        rm ./FILES ./LINKS ./DIRS ./PKGBUILD
        ;;
    "check")
	echo Verifying checksums ...
        tar -xJf $2 -C ${temp_dir} ./md5sums
	cd ${temp_dir}
	grep -ve "[a-z0-9]\{32\}\\s*\\.\\/\(FILES$\|LINKS$\|DIRS$\)" md5sums > md5sums.grep
	mv md5sums.grep md5sums
        cd /
        md5sum -c ${temp_dir}/md5sums
        ;;
    *)
        echo Simple package manager for use with LFS \(Linux From Scratch\)
	echo Usage:
        echo -e \\t$0 build
        echo -e \\t$0 build PKGBUILD-file
        echo -e \\t$0 install package.pkg \[force\]
        echo -e \\t$0 remove package.pkg
        echo -e \\t$0 check package.pkg
        ;;
esac

#clean up tempfiles
rm -rf ${temp_dir}

